(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{207:function(v,r,_){"use strict";_.r(r);var a=_(0),e=Object(a.a)({},(function(){var v=this,r=v.$createElement,_=v._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"linux系统符号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#linux系统符号","aria-hidden":"true"}},[v._v("#")]),v._v(" Linux系统符号")]),v._v(" "),_("p",[_("a",{attrs:{name:"b077c499"}})]),v._v(" "),_("h2",{attrs:{id:"基础符号（包含引号、重定向、路径信息、系统逻辑、通配符号）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础符号（包含引号、重定向、路径信息、系统逻辑、通配符号）","aria-hidden":"true"}},[v._v("#")]),v._v(" 基础符号（包含引号、重定向、路径信息、系统逻辑、通配符号）")]),v._v(" "),_("p",[_("code",[v._v("$")]),v._v("： 美元符号 1.调用变量信息 2.提示登录的用户为普通用户 3.用于取出指定列的信息（awk）"),_("br"),_("code",[v._v("|")]),v._v("： 管道符号 将前一个命令执行的结果，交给管道后面的命令进行处理"),_("br"),_("code",[v._v("#")]),v._v("： 1.提示登录的用户为roo用户 2.表示文件内容注释"),_("br"),_("code",[v._v("!")]),v._v("： 1.在find命令使用时，表示进行取反排除2.命令行中表示取出最近命令"),_("br"),v._v("        3.用于表示强制操作处理，vim底行模式保存 退出 wq! q!")]),v._v(" "),_("p",[_("a",{attrs:{name:"377920cc"}})]),v._v(" "),_("h3",{attrs:{id:"引号符号："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引号符号：","aria-hidden":"true"}},[v._v("#")]),v._v(" 引号符号：")]),v._v(" "),_("p",[_("code",[v._v("''")]),v._v("：表示所见即所得，使用单引号，那么单引号里面的变量就不会解析成真正的值"),_("br"),_("code",[v._v('""')]),v._v("：表示会将指定内容进行输出，有些信息会被解析 $"),_("br"),v._v("         比如说 n=3"),_("br"),v._v("  echo '$n'"),_("br"),v._v("  结果就是$3"),_("br"),v._v('  改成双引号 echo "$n"，结果就是3'),_("br"),v._v("````：将反引号中的命令优先执行，将执行结果交给外面的命令进行处理"),_("br"),_("strong",[v._v("没有引号：和双引号功能类似，可以识别通配符号信息")])]),v._v(" "),_("p",[_("a",{attrs:{name:"GkajO"}})]),v._v(" "),_("h3",{attrs:{id:"重定向符号系列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重定向符号系列","aria-hidden":"true"}},[v._v("#")]),v._v(" 重定向符号系列")]),v._v(" "),_("p",[_("code",[v._v(">")]),v._v("     标准输出重定向符号"),_("br"),_("code",[v._v(">>")]),v._v("   表示标准输出追加重定向"),_("br"),_("code",[v._v("<")]),v._v("     表示标准输入重定向"),_("br"),_("code",[v._v("<<")]),v._v("   表示标准追加输入重定向符号"),_("br"),_("code",[v._v("2>")]),v._v("   错误输出重定向符号"),_("br"),_("code",[v._v("2>>")]),v._v(" 错误输出追加重定向符号")]),v._v(" "),_("p",[_("a",{attrs:{name:"9d697f8c"}})]),v._v(" "),_("h3",{attrs:{id:"路径信息符号系列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路径信息符号系列","aria-hidden":"true"}},[v._v("#")]),v._v(" 路径信息符号系列:")]),v._v(" "),_("p",[_("code",[v._v("~")]),v._v("     表示家目录信息"),_("br"),_("code",[v._v("..")]),v._v("   表示上一级目录"),_("br"),_("code",[v._v("-")]),v._v("     表示两个目录之间来回切换"),_("br"),_("code",[v._v(".")]),v._v("     1.隐藏文件"),_("br"),v._v("  2.表示当前目录")]),v._v(" "),_("p",[_("a",{attrs:{name:"8f9d609e"}})]),v._v(" "),_("h3",{attrs:{id:"系统逻辑符号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#系统逻辑符号","aria-hidden":"true"}},[v._v("#")]),v._v(" 系统逻辑符号")]),v._v(" "),_("p",[_("code",[v._v("||")]),v._v("    表示前面命令执行失败，再执行后面命令"),_("br"),_("code",[v._v("&&")]),v._v("    表示前一个命令执行成功，再执行后一个命令"),_("br"),_("code",[v._v(";")]),v._v("     表示前一个命令执行成功，再执行后一个命令"),_("br"),v._v("其他："),_("br"),_("code",[v._v("$?")]),v._v("   调取上一个命令返回数值，数值为0表示命令执行正确 数值不为0表示命令执行失败"),_("br"),_("code",[v._v("/")]),v._v("     vim内底行模式，快速查内容")]),v._v(" "),_("p",[_("a",{attrs:{name:"0c7c7a87"}})]),v._v(" "),_("h3",{attrs:{id:"通配符号："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通配符号：","aria-hidden":"true"}},[v._v("#")]),v._v(" 通配符号：")]),v._v(" "),_("p",[_("code",[v._v("*")]),v._v("     匹配所有（任意）字符信息"),_("br"),_("code",[v._v("{}")]),v._v("   批量创建数据信息")]),v._v(" "),_("p",[_("a",{attrs:{name:"198e8d1f"}})]),v._v(" "),_("h2",{attrs:{id:"正则符号（基础正则符号，扩张正则符号）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则符号（基础正则符号，扩张正则符号）","aria-hidden":"true"}},[v._v("#")]),v._v(" 正则符号（基础正则符号，扩张正则符号）")]),v._v(" "),_("p",[_("a",{attrs:{name:"807a21e6"}})]),v._v(" "),_("h3",{attrs:{id:"基础正则符号："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础正则符号：","aria-hidden":"true"}},[v._v("#")]),v._v(" 基础正则符号：")]),v._v(" "),_("p",[_("code",[v._v("^")]),v._v("     以什么开头的信息进行过滤"),_("br"),_("code",[v._v("$")]),v._v("     以什么结尾的信息进行过滤"),_("br"),_("code",[v._v("^$")]),v._v("   查找出空行"),_("br"),_("code",[v._v(".")]),v._v("     匹配任意一个且只有一个字符"),_("br"),_("code",[v._v("*")]),v._v("     匹配前一个字符连续出现0次或者多次"),_("br"),_("code",[v._v(".*")]),v._v("   匹配文件所有内容信息"),_("br"),_("code",[v._v("\\")]),v._v("     ①转义符号②不提示覆盖，直接覆盖③将没有意义的字符信息变为有意义的字符信息 \\t 制表符 \\n 换行符 \\r 换行符"),_("br"),_("code",[v._v("[]")]),v._v("     匹配多个字符信息（或者关系）"),_("br"),_("code",[v._v("[^]")]),v._v("   排除指定的字符信息不要进行匹配")]),v._v(" "),_("p",[_("a",{attrs:{name:"4c4f6e89"}})]),v._v(" "),_("h3",{attrs:{id:"扩展正则符号："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#扩展正则符号：","aria-hidden":"true"}},[v._v("#")]),v._v(" 扩展正则符号：")]),v._v(" "),_("p",[_("code",[v._v("+")]),v._v("      匹配前一个字符连续出现1次或者多次"),_("br"),_("code",[v._v("|")]),v._v("      匹配的信息之间是或者的关系"),_("br"),_("code",[v._v("()")]),v._v("    将多个字符信息汇总为一个整体进行过滤"),_("br"),_("code",[v._v("{}")]),v._v("    匹配前一个字符连续出现指定的次数"),_("br"),_("code",[v._v("？")]),v._v("     匹配前一个字符连续出现0次或者1次")])])}),[],!1,null,null,null);r.default=e.exports}}]);